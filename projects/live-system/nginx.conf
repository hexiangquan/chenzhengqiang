
#user  nobody;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

user root root;

events {
    worker_connections  10240;
}


http {
    include       mime.types;
    #default_type application/octet-stream;
    lua_package_path '/usr/local/openresty/nginx/conf/daemon/?.lua;/usr/local/openresty/lualib/?.lua;';

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    log_format access '[$time_local] $request_time $remote_addr $status $bytes_sent '
                    '$request_method $Scheme://$Host$request_uri '
                    ' $http_referer "$http_user_agent" "$http_cookie" "$request_body"';
    access_log  logs/access.log  access;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    client_body_buffer_size 3m;
    client_max_body_size 10m;

    #gzip  on;
    #upstream backend {
        #drizzle_server 127.0.0.1:3306 dbname=im user=root password=123321 protocol=mysql;
        #drizzle_keepalive max=200 overflow=ignore mode=single;
    #}

    upstream redis {
        server 127.0.0.1:6379;
        keepalive 512;
    }

    server {
        listen       8090;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        location /ids {
            set_unescape_uri $id $arg_id;
            set_quote_sql_str $id;
            #drizzle_query 'select * from person where id=$id';
            #drizzle_pass backend;
            rds_json on;
        }

        location /redis {
            set_unescape_uri $key $arg_key;
            redis2_query get $key;
            redis2_pass redis;
            rds_json on;
        }

        more_set_headers 'Content-Type: application/json;charset=UTF-8';

        ##### interface for live daemon system ################################

        location /daemon/get_streamer_info.do {
            default_type application/json;
            content_by_lua_file '/usr/local/openresty/nginx/conf/daemon/get_streamer_info.lua';
        }
        
        location /daemon/get_streamer_stat.do {
            default_type application/json;
            content_by_lua_file '/usr/local/openresty/nginx/conf/daemon/get_streamer_stat.lua';
        }

        location /daemon/get_gslb_stat.do {
            default_type application/json;
            content_by_lua_file '/usr/local/openresty/nginx/conf/daemon/get_gslb_stat.lua';
        }

        location /daemon/create_live_telecast.do {
            default_type application/json;
            content_by_lua_file '/usr/local/openresty/nginx/conf/daemon/create_live_telecast.lua';
        }
        
        location /daemon/get_channel_info.do {
            default_type application/json;
            content_by_lua_file '/usr/local/openresty/nginx/conf/daemon/get_channel_info.lua';
        }

        location /daemon/set_channel.do {
            default_type application/json;
            content_by_lua_file '/usr/local/openresty/nginx/conf/daemon/set_channel.lua';
        }

        location /daemon/get_modules_upgrade_info.do {
            default_type application/json;
            content_by_lua_file '/usr/local/openresty/nginx/conf/daemon/get_modules_upgrade_info.lua';
        }

        location /daemon/channel_stat.do {
            default_type application/json;
            content_by_lua_file '/usr/local/openresty/nginx/conf/daemon/channel_stat.lua';
        }
        
        location /daemon/get_gslb.do {
            default_type application/json;
            content_by_lua_file '/usr/local/openresty/nginx/conf/daemon/get_gslb.lua';
        }

        location /daemon/gslbstat.do {
            default_type application/json;
            content_by_lua_file '/usr/local/openresty/nginx/conf/daemon/gslbstat.lua';
        }

        ##### interface for interactive with user end #########################

        ##### interface for interactive with msg server #########################
        location /daemon/msg_getgrpmembers.do {
            default_type application/json;
            content_by_lua_file '/usr/local/openresty/nginx/conf/daemon/msg_getgrpmembers.lua';
        }
        
        location /daemon/msg_deletelive.do {
            default_type application/json;
            content_by_lua_file '/usr/local/openresty/nginx/conf/daemon/msg_deletelive.lua';
        }

        ##### interface for interactive with msg server #########################
       
        location /lua{
            default_type application/json;
            content_by_lua_file 'ngx.say("hello world")';
        }
        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
